#!/bin/bash

if [ $# -lt 2 ]; then
    echo ""
    echo "[DESCRIPTION]"
    echo "Sends pwned iBEC to device in kDFU mode and then dumps onboard blobs"
    echo ""
    echo "[USAGE]"
    echo "./dumpblobs <device model> <ios version>"
    echo ""
    echo "[EXAMPLES]"
    echo "./dumpblobs iPad3,5 7.1.2"
    echo "./dumpblobs iPod5,1 9.1"
    echo "./dumpblobs iPhone4,1 6.0.1"
    echo ""
    exit
fi
if [ $# -gt 2 ]; then
    echo "[ERROR] Too many arguments"
    exit
fi

if [ $OSTYPE = msys ]; then
    echo "WINDOWS DETECTED"
    path="/c/Users/`whoami`/Downloads"
    platform="win"
    desktop="/c/Users/`whoami`/Desktop"
elif [[ $OSTYPE == "darwin"* ]]; then
    echo "MAC OS DETECTED"
    path="/Users/`whoami`/Downloads"
    platform="macos"
    desktop="/Users/`whoami`/Desktop"
else
    echo "Not supported"
    exit
fi

if [ $1 = "iPhone4,1" ]; then
    buildid="10B329"
fi
if [ $1 = "iPhone5,1" ]; then
    buildid="10B329"
fi
if [ $1 = "iPhone5,2" ]; then
    buildid="10B329"
fi
if [ $1 = "iPhone5,3" ]; then
    buildid="11B511"
fi
if [ $1 = "iPhone5,4" ]; then
    buildid="11B651"
fi
if [ $1 = "iPod5,1" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad2,1" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad2,2" ]; then
    buildid="11D257"
fi
if [ $1 = "iPad2,3" ]; then
    buildid="12H321"
fi
if [ $1 = "iPad2,4" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad2,5" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad2,6" ]; then
    buildid="12H321"
fi
if [ $1 = "iPad2,7" ]; then
    buildid="12H321"
fi
if [ $1 = "iPad3,1" ]; then
    buildid="10B146"
fi
if [ $1 = "iPad3,2" ]; then
    buildid="12H321"
fi
if [ $1 = "iPad3,3" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad3,4" ]; then
    buildid="10B329"
fi
if [ $1 = "iPad3,5" ]; then
    buildid="12H321"
fi
if [ $1 = "iPad3,6" ]; then
    buildid="10B329"
fi

model=$1
ios=$2
echo "Build ID: $buildid"
echo "iOS Version: $2"
echo "Model: $model"

cd "$path/blobs/odysseus-0.999.0/$platform/"

echo "Will attempt to send iBEC"
echo ""
./irecovery -f pwnediBEC
echo "Continuing in 16 seconds..."
echo "******"
echo "UNPLUG THEN RECONNECT DEVICE TO COMPUTER NOW"
echo "******"
sleep 16

if [ $platform = "macos" ]; then
    echo "Sending commands to device"
    (echo -e "/send ../payload\ngo blobs\n/exit") | ./irecovery -s
    echo ""
    sleep 1
    ./irecovery -g myblob.dump
    echo "Rebooting device"
    sleep 1
    ./irecovery -c reboot 
    echo ""
    sleep 1
elif [ $platform = "win" ]; then
    echo "Please wait..."
    ./shshdump.exe
    mv dump.shsh myblob.dump
fi

./ticket myblob.dump myblob.plist current.ipsw -z
./validate myblob.plist current.ipsw -z
ECID=`./ticket myblob.dump myblob2.plist current.ipsw -z | grep ECID | cut -d = -f 2`
sleep 1
if [ -e "myblob.plist" ]; then
	mv myblob.plist "$ECID-$model-$ios.shsh"
	mv "$ECID-$model-$ios.shsh" "$desktop"
	echo "BLOBS SAVED AS: $ECID-$model-$ios.shsh"
	echo "Blobs were successfully saved! This file has been moved onto your Desktop!"
else
	echo "Did NOT succeed. First try running ./dumpblobs again (entering kDFU again if needed - usual fix), otherwise try on a different version of macOS."
	
fi 


